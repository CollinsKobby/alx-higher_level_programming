The ``0-add_integer` module
===========================

Using ``add_integer``
---------------------

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer(2.7, 3.1)
5
>>> add_integer([1, 2], 9)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer(1, 10.0 ** 1000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
OverflowError: (34, 'Numerical result out of range')
>>> nan_value = float('nan')
>>> add_integer(1, nan_value)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
